.Button {
  cursor: pointer;
  padding: $margin_small;

  border: none;
  background: $color_object;
  box-shadow: none;
  box-sizing: border-box;
  border: 1px solid $color_bg;
  &.is-full-width {
    width: 100%;
  }
  &.is-active {
    background: $color_dark;
    color: $color_bg;
  }
}

.Railway {
  .main-column {
    height: 100%;
    width: $railway_width;
    display: flex;
    flex-flow: column nowrap;
    justify-content: stretch;
    box-sizing: border-box;
    .items-container {
      overflow-y: scroll;
      height: 100%;
      list-style: none;
      padding: 0;
      margin: 0;
      flex: 1;
      display: flex;
      flex-flow: column nowrap;
      justify-content: stretch;
      box-sizing: border-box;
      .RailwayItem {
        flex: 1;
        position: relative;
        transition: 0.5s ease all;
        .main-item-content {
          border: 1px solid $color_bg;
          background: $color_object;
          width: 100%;
          box-sizing: border-box;
          position: relative;
          height: 100%;
          list-style: none;
          padding: 0;
          margin: 0;
          display: flex;
          flex-flow: row nowrap;
          justify-content: stretch;
          cursor: pointer;
          .category-object {
            flex: 1;
          }
        }
        .preview-content-container {
          position: absolute;
          left: calc(100% + $margin_small);
          top: 0;
          width: 100vw;
          transition: 0.5s ease all;
          pointer-events: none;
          z-index: 1000;
          opacity: 0;

          .preview-content {
            color: $color_bg;
            background: $color_dark;
            display: inline-block;
            padding: $margin_small;

            .tags-summary {
              padding: 0;
              .tag-summary-item {
                display: flex;
                flex-flow: row nowrap;
                align-items: center;
                margin-bottom: calc($margin_small / 2);
                .color-marker {
                  min-width: 1em;
                  max-width: 1em;
                  min-height: 1em;
                  max-height: 1em;
                  margin-right: $margin_small;
                }
                .datum-value-for-category {
                  margin-left: $margin_small;
                  flex: 1;
                }
              }
            }
          }
        }

        &.is-active {
          .main-item-content {
            border: 1px solid $color_dark;
          }
        }
      }
      // when items container is hover ...
      &:hover {
        // lighten all items ...
        .RailwayItem {
          opacity: 0.5;
          .preview-content-container {
            opacity: 0;
          }
          // ... except the one which is hovered
          &:hover {
            opacity: 1;
            .preview-content-container {
              opacity: 1;
            }
          }
        }
      }
    }
    .edit-toggle-container {
      padding-top: $margin_medium;
      .Button {
        height: $railway_width;
      }
    }
    .refresh-container {
      max-height: 0;
      transition: 0.5s ease all;
      overflow: hidden;
      .Button {
        height: $railway_width;

        span {
          position: relative;
          top: -0.2em;
        }
      }
    }
  }

  .secondary-column {
    position: absolute;
    bottom: 0;
    left: $railway_width + $margin_small;
    width: 10vw;
    max-width: 20rem;
    height: 100%;
    display: flex;
    flex-flow: column nowrap;
    justify-content: stretch;
  }

  .sort-options-container {
    opacity: 0;
    max-height: 0;
    overflow: hidden;
    pointer-events: none;
    transition: 0.5s ease all;

    .sort-options-title {
      color: $color_bg;
      margin-bottom: $margin_small;
    }

    ul {
      padding: 0;
      margin: 0;
      list-style: none;
      position: relative;
    }
  }

  .arrows-wrapper {
    flex: 1;
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    width: 100vw;
    pointer-events: none;
    .arrow-item-container {
      display: flex;
      flex-flow: row nowrap;
      align-items: center;
      pointer-events: all;
      .key-binding-info {
        opacity: 0;
        pointer-events: none;
        transition: 0.5s ease all;
        padding-left: $margin_small;
        min-width: 12rem;
      }

      &:hover {
        .key-binding-info {
          opacity: 1;
          z-index: 5;
        }
      }

      .edit-key-assign-btn {
        opacity: 0;
        pointer-events: none;
        transition: 0.5s ease all;
      }
    }
  }

  .railway-background {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: $color_translucid_dark;
    cursor: pointer;
    opacity: 0;
    pointer-events: none;
    transition: 0.5s ease all;
  }

  // when .Railway is refreshable
  &.is-refreshable {
    .refresh-container {
      max-height: 100vh;
    }
  }

  // when .Railway is edited
  &.is-edited {
    z-index: 5;
    .railway-background {
      opacity: 1;
      pointer-events: all;
    }
    .arrows-wrapper {
      .arrow-item-container {
        .key-binding-info {
          opacity: 1;
          color: $color_bg;
        }
        .edit-key-assign-btn {
          opacity: 1;
          pointer-events: all;
        }
      }
    }
    .sort-options-container {
      opacity: 1;
      max-height: 100%;
      pointer-events: all;
    }
  }
}
// End of Railway component styling

.Header {
  h1 {
    margin: 0;
  }

  .backlink_btn {
    text-decoration: underline;
    cursor: pointer;
    &:before {
      content: '←';
    }
  }
}

.MediaPreview {
  .type-choice-container {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    margin-bottom: $margin_medium;
    > div {
      flex: 1;
    }
    > div:first-of-type {
      text-align: right;
      padding-right: $margin_small;
    }
  }
}

.DownloadFooter {
}
.DownloadFooterModalContent {
  ul {
    list-style: none;
    padding: 0;
    display: flex;
    flex-flow: row nowrap;
  }
}

.ResetConfirmModalContent {
  ul {
    list-style: none;
    padding: 0;
    display: flex;
    flex-flow: row nowrap;
  }
}

.TagsColumn {
  width: calc(50vw - $layout_annotation_width / 2 - $margin_medium * 2);
  border: 1px solid $color_dark;
  overflow: hidden;
  box-sizing: border-box;
  padding: $margin_medium;

  display: flex;
  flex-flow: column nowrap;
  justify-content: stretch;

  .main-row {
    padding: 0;
    margin: 0;
    list-style: none;
    flex: 1;
    overflow-y: auto;
  }

  .upload-status-container {
    transition: 0.5s ease all;
    overflow: hidden;
    max-height: 100vh;
    &.is-hidden {
      max-height: 0;
    }
  }

  .model-drop-container {
    transition: 0.5s ease all;
    overflow: hidden;
    max-height: 0;
  }

  .add-new-categorization-container,
  .add-new-modality-container {
    overflow: hidden;
    transition: 0.5s ease all;
    max-height: 0;
  }

  .CategorizationGroup {
    &:not(:last-of-type) {
      margin-bottom: $margin_medium;
    }
    .CategorizationHeader {
      display: flex;
      flex-flow: row nowrap;
      align-items: center;
      justify-content: stretch;

      .categorization-title-container {
        flex: 1;
        margin: 0;
        padding-right: $margin_small;
        position: relative;
        height: 2.2em;
        box-sizing: border-box;

        .completed-portion-container,
        .title-container {
          position: absolute;
          width: 100%;
          height: 100%;
          left: 0;
          top: 0;
          box-sizing: border-box;
        }
        .completed-portion-container {
          opacity: 1;
          transition: 0.5s ease all;
          .completed-portion-background {
            filter: saturate(20%) brightness(300%) opacity(0.5);
            position: absolute;
            width: 100%;
            height: 100%;
            left: 0;
            top: 0;
          }
          .completed-portion-bar {
            height: 100%;
            position: absolute;
            left: 0;
            top: 0;
            filter: saturate(100%);
            border: 1px solid $color_bg;
            box-sizing: border-box;
          }
        }

        .title-container {
          .title-readmode,
          .title-writemode {
            padding: $margin_small;
            box-sizing: border-box;
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow-x: auto;
            overflow-y: hidden;
          }

          .title-writemode {
            height: 2rem;
          }
        }
      }

      .delete-btn-container {
        transition: 0.5s ease all;
        overflow: hidden;
        max-width: 0;
        padding-left: 0;
      }
    }

    .modalities-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    &.is-edited {
      .add-new-categorization-container,
      .add-new-modality-container {
        max-height: 10rem;
      }
      .CategorizationHeader {
        .completed-portion-container {
          opacity: 0;
          pointer-events: none;
        }
        .delete-btn-container {
          max-width: 100%;
          padding-left: $margin_small;
        }
      }
    }
  }

  .ModalityGroup {
    display: flex;
    flex-flow: row nowrap;
    justify-content: stretch;
    align-items: center;

    width: 100%;
    max-width: 100%;
    overflow: hidden;

    .key-btn-container {
      padding-right: $margin_small;
    }

    .title-container {
      flex: 1;
      height: 2rem;
      box-sizing: border-box;

      position: relative;
      display: flex;
      flex-flow: row nowrap;
      align-items: center;

      .share-bar,
      .share-bar-background {
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        background: $color_translucid_light;
        z-index: -1;
      }

      .share-bar-background {
        background: $color_translucid_extralight;
        width: 100%;
      }

      .title-readmode,
      .title-writemode {
        padding: $margin_small;
        box-sizing: border-box;
      }

      .title-writemode {
        width: 100%;
        height: 2rem;
      }
    }
    .delete-btn-container {
      transition: 0.5s ease all;
      overflow: hidden;
      max-width: 0;
      padding-left: 0;
    }
    &.is-edited {
      .delete-btn-container {
        max-width: 100vw;
        padding-left: $margin_small;
      }
    }
  }

  .cta-container {
    margin-top: $margin_small;
  }

  // tagscolumn is edited
  &.is-edited {
    .model-drop-container {
      max-height: 100vh;
    }
  }
}

.Dropzone {
  border: 1px dashed $color_dark;
  padding: $margin_medium;
  margin: $margin_medium 0;

  &.is-drag-active {
    // @todo refine color
    background: green;
  }
}

.SamplePicker {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  margin: $margin_medium 0;
  > div:first-of-type {
    padding-right: $margin_small;
  }
  > div:last-of-type {
    flex: 1;
  }
}

.Notification {
  padding: $margin_medium;
  &.is-type-error {
    // @todo refine color
    background: red;
  }
}

.LoadingCartel {
  border: 1px solid $color_dark;
  padding: $margin_medium;
  text-align: center;
  .animation-container {
    font-size: 2rem;
    animation: rotation 2s infinite linear;
    display: flex;
    flex-flow: column nowrap;
    > span {
      position: relative;
    }
    > span:first-of-type {
      top: 0.5em;
      left: 0.1em;
    }
    > span:last-of-type {
      top: -0.5em;
      transform: rotate(180deg);
    }
  }
  .bar-container {
    height: 1rem;
    border: 1px solid $color_dark;
    position: relative;
    .bar-bar {
      background: $color_dark;
      height: 100%;
      position: absolute;
      left: 0;
      top: 0;
      transition: 0.2s ease width;
    }
  }
  // .loading-message {
  // }
}

.TablePreview {
  min-width: 100%;
  max-width: 100%;
  overflow: auto;
  th,
  td {
    min-width: 5rem;
    text-align: left;
    padding: $margin_small;
    cursor: pointer;
    transition: 0.5s ease background;
    background: rgba(0, 0, 0, 0);
    &.is-active {
      // @todo refine color
      background: lightgreen;
      cursor: default;
    }
    &.is-hovered:not(.is-active) {
      background: $color_translucid_light;
    }
  }
}

.InfoPin {
  cursor: pointer;
  position: relative;
  display: inline-block;
  padding: 0 calc($margin_small / 2);
  font-size: 1em;
  > span {
    width: 1em;
    height: 1em;
    border: 1px solid $color_dark;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
  }

  //Tooltip text container
  &::before {
    position: absolute;
    bottom: 30px;
    left: -80px;
    // @todo change colors;
    background-color: $color_dark;
    color: #fff;
    content: attr(
      aria-label
    ); //This pulls in the text from the element with the tooltip
    padding: $margin_small;
    text-transform: none;
    transition: all 0.5s ease;
    width: 160px;
    z-index: 1000;
  }

  //Tooltip arrow
  &::after {
    position: absolute;
    top: -12px;
    left: 9px;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 5px solid #2b222a;
    content: ' ';
    font-size: 0;
    line-height: 0;
    margin-left: -5px;
    width: 0;
    z-index: 1000;
  }

  //Setting up the transition
  &::before,
  &::after {
    color: $color_bg;
    opacity: 0;
    pointer-events: none;
    text-align: center;
  }

  //Triggering the transition
  &:focus::before,
  &:focus::after,
  &:hover::before,
  &:hover::after {
    opacity: 1;
    transition: all 0.75s ease;
  }
}

.Modal {
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  transition: 0.5s ease all;
  background: rgba(0, 0, 0, 0);
  opacity: 0;

  pointer-events: none;

  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;

  .modal-bg {
    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    cursor: pointer;
  }

  .modal-content {
    background: $color_bg;
    padding: $margin_medium;
    z-index: 2000;
  }

  &.is-open {
    z-index: 1000;
    background: $color_translucid_dark;
    pointer-events: all;
    opacity: 1;
  }
}
